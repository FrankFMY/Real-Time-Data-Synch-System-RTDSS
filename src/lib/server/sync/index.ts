/**
 * Sync Infrastructure
 *
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 */

export { sseManager } from './sse-manager';
export { batchUpdateHandler } from './batch-handler';
export { postgresListener } from './postgres-listener';
export { syncManager } from './sync-manager';

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è sync –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
 */
export async function initSyncInfrastructure() {
	try {
		console.log('üöÄ Initializing sync infrastructure...');

		// –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL Listener
		const { postgresListener } = await import('./postgres-listener');
		await postgresListener.start();

		console.log('‚úÖ Sync infrastructure initialized');
	} catch (error) {
		console.error('‚ùå Failed to initialize sync infrastructure:', error);
		throw error;
	}
}

/**
 * Graceful shutdown sync –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
 */
export async function shutdownSyncInfrastructure() {
	try {
		console.log('üõë Shutting down sync infrastructure...');

		const { postgresListener } = await import('./postgres-listener');
		const { sseManager } = await import('./sse-manager');

		await postgresListener.stop();
		await sseManager.shutdown();

		console.log('‚úÖ Sync infrastructure shut down');
	} catch (error) {
		console.error('‚ùå Error during shutdown:', error);
	}
}
